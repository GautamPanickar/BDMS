/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package blooddonormanagementsystem;

import BDMS.Database.DataBaseManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.MessageFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JRootPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author arun
 */
public class PendingDueDateFeedback extends javax.swing.JFrame {

    String username = null;
    Date currentDate = null;
    /**
     * Creates new form SearchPane
     */
    public PendingDueDateFeedback() {
        initComponents();
        this.setVisible(true);
        setLocationRelativeTo(null);
        this.setResizable(false);
    }
    
    public PendingDueDateFeedback(ResultSet rs, String user, Date date)
    {
        initComponents();
        this.setVisible(true);
        setLocationRelativeTo(null);
        this.setResizable(false);
        this.username = user; 
        this.currentDate = date;
        this.SetTableDetails(rs);       
    }
    
    // Setting the table details by default
    public void SetTableDetails(ResultSet rs)
    {
        if ( null == rs )
        {
                    
        }
        else
        {/*
            try{
                if(rs.next())
                {System.out.println(rs.getString("Requester_ID"));
                }
            }catch(Exception ex){} */
            DueDateFeedbackTable.setModel(DbUtils.resultSetToTableModel(rs));
        }        
    }
    
    // Works as a refresh after user does some action on the  pending duedate feedback form
    public void PopulateDueDateFeedbackTable()
    {
        // By default the table details
        DataBaseManager manager = null; 
        ResultSet rs = null; 
        try 
            {
                manager = new DataBaseManager();
                rs = manager.RetrievePendingDueDateRequests(username, currentDate);
                if ( null == rs )
                {
                    
                }
                else
                {
                   DueDateFeedbackTable.setModel(DbUtils.resultSetToTableModel(rs));
                }
                
                // deallocation
                manager.closeConection();
                manager    = null;
                rs         = null;
                
            } 
            catch (ClassNotFoundException | SQLException ex) 
            {
                Logger.getLogger(AdminForm.class.getName()).log(Level.SEVERE, null, ex);
            }        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DueDateFeedbackPanel = new javax.swing.JPanel();
        DueDateFeedbackSubpanel = new javax.swing.JPanel();
        DueDateFeedbackScrollPane = new javax.swing.JScrollPane();
        DueDateFeedbackTable = new javax.swing.JTable();
        WillingButton = new javax.swing.JButton();
        NotWillingButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        DueDateFeedbackSubpanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        DueDateFeedbackTable.setFont(new java.awt.Font("Miriam Fixed", 0, 12)); // NOI18N
        DueDateFeedbackTable.setForeground(new java.awt.Color(102, 0, 0));
        DueDateFeedbackTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Details"
            }
        ));
        DueDateFeedbackScrollPane.setViewportView(DueDateFeedbackTable);

        javax.swing.GroupLayout DueDateFeedbackSubpanelLayout = new javax.swing.GroupLayout(DueDateFeedbackSubpanel);
        DueDateFeedbackSubpanel.setLayout(DueDateFeedbackSubpanelLayout);
        DueDateFeedbackSubpanelLayout.setHorizontalGroup(
            DueDateFeedbackSubpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 590, Short.MAX_VALUE)
            .addGroup(DueDateFeedbackSubpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(DueDateFeedbackScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 590, Short.MAX_VALUE))
        );
        DueDateFeedbackSubpanelLayout.setVerticalGroup(
            DueDateFeedbackSubpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 380, Short.MAX_VALUE)
            .addGroup(DueDateFeedbackSubpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(DueDateFeedbackScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE))
        );

        WillingButton.setBackground(new java.awt.Color(0, 102, 51));
        WillingButton.setFont(new java.awt.Font("Miriam Fixed", 0, 12)); // NOI18N
        WillingButton.setForeground(new java.awt.Color(255, 255, 255));
        WillingButton.setText("Willing");
        WillingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WillingButtonActionPerformed(evt);
            }
        });

        NotWillingButton.setBackground(new java.awt.Color(153, 51, 0));
        NotWillingButton.setFont(new java.awt.Font("Miriam Fixed", 0, 12)); // NOI18N
        NotWillingButton.setForeground(new java.awt.Color(255, 255, 255));
        NotWillingButton.setText("Not willing");
        NotWillingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NotWillingButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Miriam Fixed", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 0, 0));
        jLabel2.setText("Urgent feedback required!!");

        javax.swing.GroupLayout DueDateFeedbackPanelLayout = new javax.swing.GroupLayout(DueDateFeedbackPanel);
        DueDateFeedbackPanel.setLayout(DueDateFeedbackPanelLayout);
        DueDateFeedbackPanelLayout.setHorizontalGroup(
            DueDateFeedbackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DueDateFeedbackPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(DueDateFeedbackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(DueDateFeedbackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(DueDateFeedbackSubpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(DueDateFeedbackPanelLayout.createSequentialGroup()
                        .addComponent(WillingButton, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(NotWillingButton, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        DueDateFeedbackPanelLayout.setVerticalGroup(
            DueDateFeedbackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DueDateFeedbackPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(DueDateFeedbackSubpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addGroup(DueDateFeedbackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(WillingButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NotWillingButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(DueDateFeedbackPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(DueDateFeedbackPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void WillingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WillingButtonActionPerformed
        // On clicking the Willing button
        DataBaseManager dbmanager = null;
        DefaultTableModel dm = (DefaultTableModel)DueDateFeedbackTable.getModel();
        int rowCount = dm.getRowCount();
        int status = 0;
        String donorID = null;
        if( 0 == rowCount)
        {
            JOptionPane.showMessageDialog(rootPane, "No pending requests...");
        }
        else if( DueDateFeedbackTable.getSelectedRow() >= 0)
        {
            try
            {
                dbmanager = new DataBaseManager();
                donorID = dbmanager.RetrieveDonorID(username);
                status = dbmanager.DonorWillingOrNot(donorID, String.valueOf(DueDateFeedbackTable.getValueAt( DueDateFeedbackTable.getSelectedRow() ,0)),
                    "WILLING");
                if (1 == status)
                {
                    this.PopulateDueDateFeedbackTable();
                    JOptionPane.showMessageDialog(rootPane, "Your feedback has been sent successfully...");
                }
                else
                {
                    this.PopulateDueDateFeedbackTable();
                    JOptionPane.showMessageDialog(rootPane, "Feedback could not be sent...");
                }
            }
            catch (ClassNotFoundException | SQLException ex)
            {
                JOptionPane.showMessageDialog(rootPane, ex.getMessage());
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Please select a row to continue...");
        }
    }//GEN-LAST:event_WillingButtonActionPerformed

    private void NotWillingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NotWillingButtonActionPerformed
        // On clicking the Not Willing button
        DataBaseManager dbmanager = null;
        DefaultTableModel dm = (DefaultTableModel)DueDateFeedbackTable.getModel();
        int rowCount = dm.getRowCount();
        int status = 0;
        String donorID = null;
        if( 0 == rowCount)
        {
            JOptionPane.showMessageDialog(rootPane, "No pending requests...");
        }
        else if( DueDateFeedbackTable.getSelectedRow() >= 0)
        {
            try
            {
                dbmanager =new DataBaseManager();
                donorID = dbmanager.RetrieveDonorID(username);
                status = dbmanager.DonorWillingOrNot(donorID, String.valueOf(DueDateFeedbackTable.getValueAt( DueDateFeedbackTable.getSelectedRow() ,0)),
                    "NOTWILLING");
                if (1 == status)
                {
                    this.PopulateDueDateFeedbackTable();
                    JOptionPane.showMessageDialog(rootPane, "Your feedback has been sent successfully...");
                }
                else
                {
                    this.PopulateDueDateFeedbackTable();
                    JOptionPane.showMessageDialog(rootPane, "Feedback could not be sent...");
                }
            }
            catch (ClassNotFoundException | SQLException ex)
            {
                JOptionPane.showMessageDialog(rootPane, ex.getMessage());
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Please select a row to continue...");
        }
    }//GEN-LAST:event_NotWillingButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PendingDueDateFeedback.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PendingDueDateFeedback.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PendingDueDateFeedback.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PendingDueDateFeedback.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PendingDueDateFeedback().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel DueDateFeedbackPanel;
    private javax.swing.JScrollPane DueDateFeedbackScrollPane;
    private javax.swing.JPanel DueDateFeedbackSubpanel;
    private javax.swing.JTable DueDateFeedbackTable;
    private javax.swing.JButton NotWillingButton;
    private javax.swing.JButton WillingButton;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
