/*
 * The class for LoginForm frame which contains login and verification actions
 */
package blooddonormanagementsystem;

import BDMS.Database.DataBaseManager;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author Panickar
 */
public class LoginForm extends javax.swing.JFrame {

    /**
     * Creates new form LoginForm
     */
    public LoginForm() {
        initComponents();
        
        // Setting the default location to the middle of the screen
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BasePanel = new javax.swing.JPanel();
        LoginFormPanel = new javax.swing.JPanel();
        UsernameLabel = new javax.swing.JLabel();
        PasswordLabel = new javax.swing.JLabel();
        UsernameTextbox = new javax.swing.JTextField();
        PasswordTextbox = new javax.swing.JPasswordField();
        LoginButton = new javax.swing.JButton();
        ClearButton = new javax.swing.JButton();
        HeaderPanel = new javax.swing.JPanel();
        HeaderLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        BasePanel.setBackground(new java.awt.Color(51, 51, 51));

        LoginFormPanel.setBackground(new java.awt.Color(255, 255, 255));
        LoginFormPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Login here!", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Miriam Fixed", 0, 11))); // NOI18N

        UsernameLabel.setFont(new java.awt.Font("Miriam Fixed", 0, 11)); // NOI18N
        UsernameLabel.setText("Username");

        PasswordLabel.setFont(new java.awt.Font("Miriam Fixed", 0, 11)); // NOI18N
        PasswordLabel.setText("Password");

        UsernameTextbox.setFont(new java.awt.Font("Miriam Fixed", 0, 14)); // NOI18N

        PasswordTextbox.setFont(new java.awt.Font("Miriam Fixed", 0, 14)); // NOI18N
        PasswordTextbox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                PasswordTextboxKeyPressed(evt);
            }
        });

        LoginButton.setFont(new java.awt.Font("Miriam Fixed", 0, 11)); // NOI18N
        LoginButton.setText("Login");
        LoginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginButtonActionPerformed(evt);
            }
        });

        ClearButton.setFont(new java.awt.Font("Miriam Fixed", 0, 11)); // NOI18N
        ClearButton.setText("Clear");
        ClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout LoginFormPanelLayout = new javax.swing.GroupLayout(LoginFormPanel);
        LoginFormPanel.setLayout(LoginFormPanelLayout);
        LoginFormPanelLayout.setHorizontalGroup(
            LoginFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginFormPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(LoginFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(LoginFormPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(LoginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(114, 114, 114))
                    .addGroup(LoginFormPanelLayout.createSequentialGroup()
                        .addGroup(LoginFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(UsernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PasswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(LoginFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PasswordTextbox)
                            .addComponent(UsernameTextbox))))
                .addContainerGap())
        );
        LoginFormPanelLayout.setVerticalGroup(
            LoginFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginFormPanelLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(LoginFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(UsernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(LoginFormPanelLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(UsernameTextbox, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)))
                .addGap(20, 20, 20)
                .addGroup(LoginFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PasswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PasswordTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(LoginFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LoginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34))
        );

        HeaderPanel.setBackground(new java.awt.Color(51, 51, 51));

        HeaderLabel.setFont(new java.awt.Font("Miriam Fixed", 1, 14)); // NOI18N
        HeaderLabel.setForeground(new java.awt.Color(255, 255, 255));
        HeaderLabel.setText("Blood Donor Management System");

        javax.swing.GroupLayout HeaderPanelLayout = new javax.swing.GroupLayout(HeaderPanel);
        HeaderPanel.setLayout(HeaderPanelLayout);
        HeaderPanelLayout.setHorizontalGroup(
            HeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HeaderPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(HeaderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );
        HeaderPanelLayout.setVerticalGroup(
            HeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HeaderPanelLayout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addComponent(HeaderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout BasePanelLayout = new javax.swing.GroupLayout(BasePanel);
        BasePanel.setLayout(BasePanelLayout);
        BasePanelLayout.setHorizontalGroup(
            BasePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BasePanelLayout.createSequentialGroup()
                .addComponent(HeaderPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(LoginFormPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        BasePanelLayout.setVerticalGroup(
            BasePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BasePanelLayout.createSequentialGroup()
                .addComponent(HeaderPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(LoginFormPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(95, 95, 95))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BasePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BasePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearButtonActionPerformed
        // Clear the username and password fields to null
        UsernameTextbox.setText(null);
        PasswordTextbox.setText(null);
    }//GEN-LAST:event_ClearButtonActionPerformed

    // On clicking the Login button
    private void LoginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginButtonActionPerformed
        try
        {
            // Initializing DB
            DataBaseManager dbManager = new DataBaseManager();
            
            // Initializing  date format and getting the current date
            DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");       
            String date= dateFormat.format(new Date());
            int DonorID = 0;
            if( UsernameTextbox.getText().length() < 30 && PasswordTextbox.getPassword().length < 30 )
            {
                // If the credential is that of an admin
                if (dbManager.AdminCheck(UsernameTextbox.getText(), new String(PasswordTextbox.getPassword())))
                {
                    new AdminForm().setVisible(true);
                    this.hide();
                }
                else if(dbManager.DonorCheck(UsernameTextbox.getText(), new String(PasswordTextbox.getPassword())) != 0)
                {
                    try
                    {                        
                        // new DonorForm();
                        new DonorForm(UsernameTextbox.getText());  
                        Date currentDate = dateFormat.parse(date);
                        ResultSet rsDue = dbManager.RetrievePendingDueDateRequests(UsernameTextbox.getText(), currentDate);
                        if (null == rsDue)
                        {
                            
                        }
                        else                             
                        {
                            if(!rsDue.next())
                            {
                                
                            }
                            // Displaying the due feedback form  
                            else
                            {
                                new PendingDueDateFeedback(rsDue, UsernameTextbox.getText(), currentDate);
                            }
                        }                        
                        this.hide();
                    }
                    catch(ParseException ex)
                    {
                        JOptionPane.showMessageDialog( rootPane, ex.getMessage());
                    }
                }
                else
                {
                    JOptionPane.showMessageDialog( rootPane, "Incorrect username or password.\nRenter credentials!" );
                }
            }
            else
            {
                JOptionPane.showMessageDialog( rootPane, "Username/ password too long.\n Re-enter fields!" );
            }
        }
        catch( ClassNotFoundException | SQLException ex )
        {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage() );
        }       
    }//GEN-LAST:event_LoginButtonActionPerformed

    private void PasswordTextboxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PasswordTextboxKeyPressed
        // On pressing enter key
        // Handling login by hitting Enter key
        if (evt.getKeyCode()==KeyEvent.VK_ENTER)
        {        
            try
            {
                // Initializing DB
                DataBaseManager dbManager = new DataBaseManager();
            
                // Initializing  date format and getting the current date
                DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");       
                String date= dateFormat.format(new Date());
                int DonorID = 0;
                if( UsernameTextbox.getText().length() < 30 && PasswordTextbox.getPassword().length < 30 )
                {
                    // If the credential is that of an admin
                    if (dbManager.AdminCheck(UsernameTextbox.getText(), new String(PasswordTextbox.getPassword())))
                    {
                        new AdminForm().setVisible(true);
                        this.hide();
                    }
                    else if(dbManager.DonorCheck(UsernameTextbox.getText(), new String(PasswordTextbox.getPassword())) != 0)
                    {
                        try
                        {                        
                            // new DonorForm();
                            new DonorForm(UsernameTextbox.getText());  
                            Date currentDate = dateFormat.parse(date);
                            ResultSet rsDue = dbManager.RetrievePendingDueDateRequests(UsernameTextbox.getText(), currentDate);
                            if (null == rsDue)
                            {

                            }
                            else                             
                            {
                               if(!rsDue.next())
                                {
                                
                                }
                                // Displaying the due feedback form  
                                else
                                {
                                    new PendingDueDateFeedback(rsDue, UsernameTextbox.getText(), currentDate);
                                }
                            }                        
                            this.hide();
                        }
                        catch(ParseException ex)
                        {
                            JOptionPane.showMessageDialog( rootPane, ex.getMessage());
                        }
                    }
                    else
                    {
                        JOptionPane.showMessageDialog( rootPane, "Incorrect username or password.\nRenter credentials!" );
                    }
                }
                else
                {
                    JOptionPane.showMessageDialog( rootPane, "Username/ password too long.\n Re-enter fields!" );
                }
            }
            catch( ClassNotFoundException | SQLException ex )
            {
                JOptionPane.showMessageDialog(rootPane, ex.getMessage() );
            }       
        }
    }//GEN-LAST:event_PasswordTextboxKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BasePanel;
    private javax.swing.JButton ClearButton;
    private javax.swing.JLabel HeaderLabel;
    private javax.swing.JPanel HeaderPanel;
    private javax.swing.JButton LoginButton;
    private javax.swing.JPanel LoginFormPanel;
    private javax.swing.JLabel PasswordLabel;
    private javax.swing.JPasswordField PasswordTextbox;
    private javax.swing.JLabel UsernameLabel;
    private javax.swing.JTextField UsernameTextbox;
    // End of variables declaration//GEN-END:variables
}
