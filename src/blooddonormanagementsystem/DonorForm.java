/*
 * Consists of the functionalitites for a donor as an individual
 */
package blooddonormanagementsystem;

import BDMS.Database.DataBaseManager;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;
/**
 *
 * @author Panickar
 */
public class DonorForm extends javax.swing.JFrame {

    private String username;
    /**
     * Creates new form DonorForm
     */
    public DonorForm() {
        initComponents();       
                
    }
    
    public DonorForm(String user)
    {
        initComponents();
        // Aligning the frame to the middle of the screen
        this.setLocationRelativeTo(null);
        this.setVisible(true);
        this.username = user;        
    }
    
    // Function to set the visibility of different panels 
    // The method first sets the visibility oif all the other panel except the required one to false.
    // Then it sets the visibility of the required panel to true.
    public void SetVisibility( JPanel panel )
    {
        HomePanel.setVisible(false);
        ProfilePanel.setVisible(false);
        RequestsPanel.setVisible(false);
        
        panel.setVisible(true);             
    }
    
    // Sets the details in the donor profile
    public void SetDonorProfileDetails()
    {
        ResultSet rs = null;
        
        try
        {
            DataBaseManager dbmanager = new DataBaseManager();
            rs= dbmanager.RetrieveDonorDetails(this.username);            
            /*if (rs == null)
            {
                JOptionPane.showMessageDialog(rootPane, "No details could be found for the user!!");
            }*/
            if(rs.next())
            {
                // Setting the UI
                NameTextfield.setText(rs.getString("Name"));
                BloodgroupTextfield.setText(rs.getString("Blood_group"));
                AddressTextarea.setText(rs.getString("Address"));
                DistrictTextfield.setText(rs.getString("District"));
                CityTextfield.setText(rs.getString("City"));  
                PhoneTextField.setText(rs.getString("Phone")); 
                DateTextField.setText(rs.getString("Reg_Date"));
                AgeTextfield.setText(rs.getString("Age"));
            }              
        }
        catch(ClassNotFoundException | SQLException ex)
        {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        }
    }
    
    public void PopulatePendingRequestsTable()
    {
        // By default setst the table with all acceptors in db
        DataBaseManager manager = null; 
        ResultSet rs = null; 
        try 
            {
                manager = new DataBaseManager();
                rs = manager.RetrievePendingRequestsForDonor(username);
                if ( null == rs )
                {
                    
                }
                else
                {
                   RequestsTable.setModel(DbUtils.resultSetToTableModel(rs));
                }
                
                // deallocation
                manager.closeConection();
                manager    = null;
                rs         = null;
                
            } 
            catch (ClassNotFoundException | SQLException ex) 
            {
                Logger.getLogger(AdminForm.class.getName()).log(Level.SEVERE, null, ex);
            }        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BasePanel = new javax.swing.JPanel();
        HeaderPanel = new javax.swing.JPanel();
        HeaderOptionsHolder = new javax.swing.JPanel();
        HomeOptionButton = new javax.swing.JButton();
        ProfileOptionButton = new javax.swing.JButton();
        RequestsOptionButton = new javax.swing.JButton();
        LogoutOptionButton = new javax.swing.JButton();
        MiddlePanel = new javax.swing.JPanel();
        HomePanel = new javax.swing.JPanel();
        PictureHolder = new javax.swing.JLabel();
        ProfilePanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        NameTextfield = new javax.swing.JTextField();
        BloodgroupTextfield = new javax.swing.JTextField();
        DistrictTextfield = new javax.swing.JTextField();
        PhoneTextField = new javax.swing.JTextField();
        DateTextField = new javax.swing.JTextField();
        AgeTextfield = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        AddressTextarea = new javax.swing.JTextArea();
        CityTextfield = new javax.swing.JTextField();
        RequestsPanel = new javax.swing.JPanel();
        RequestsSubpanel = new javax.swing.JPanel();
        RequestsScrollpane = new javax.swing.JScrollPane();
        RequestsTable = new javax.swing.JTable();
        WillingButton = new javax.swing.JButton();
        NotWillingButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        BasePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        HeaderPanel.setBackground(new java.awt.Color(51, 51, 51));

        HeaderOptionsHolder.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        HeaderOptionsHolder.setLayout(new java.awt.GridLayout(1, 0));

        HomeOptionButton.setFont(new java.awt.Font("Miriam Fixed", 0, 12)); // NOI18N
        HomeOptionButton.setText("Home");
        HomeOptionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HomeOptionButtonActionPerformed(evt);
            }
        });
        HeaderOptionsHolder.add(HomeOptionButton);

        ProfileOptionButton.setFont(new java.awt.Font("Miriam Fixed", 0, 12)); // NOI18N
        ProfileOptionButton.setText("Donor Profile");
        ProfileOptionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProfileOptionButtonActionPerformed(evt);
            }
        });
        HeaderOptionsHolder.add(ProfileOptionButton);

        RequestsOptionButton.setFont(new java.awt.Font("Miriam Fixed", 0, 12)); // NOI18N
        RequestsOptionButton.setText("Requests for blood");
        RequestsOptionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RequestsOptionButtonActionPerformed(evt);
            }
        });
        HeaderOptionsHolder.add(RequestsOptionButton);

        LogoutOptionButton.setFont(new java.awt.Font("Miriam Fixed", 0, 12)); // NOI18N
        LogoutOptionButton.setText("Log out");
        LogoutOptionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutOptionButtonActionPerformed(evt);
            }
        });
        HeaderOptionsHolder.add(LogoutOptionButton);

        javax.swing.GroupLayout HeaderPanelLayout = new javax.swing.GroupLayout(HeaderPanel);
        HeaderPanel.setLayout(HeaderPanelLayout);
        HeaderPanelLayout.setHorizontalGroup(
            HeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HeaderPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(HeaderOptionsHolder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        HeaderPanelLayout.setVerticalGroup(
            HeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HeaderPanelLayout.createSequentialGroup()
                .addContainerGap(36, Short.MAX_VALUE)
                .addComponent(HeaderOptionsHolder, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        BasePanel.add(HeaderPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 700, -1));

        MiddlePanel.setLayout(new java.awt.CardLayout());

        HomePanel.setBackground(new java.awt.Color(255, 255, 255));

        PictureHolder.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BDMS/Images/DonorHome.png"))); // NOI18N

        javax.swing.GroupLayout HomePanelLayout = new javax.swing.GroupLayout(HomePanel);
        HomePanel.setLayout(HomePanelLayout);
        HomePanelLayout.setHorizontalGroup(
            HomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HomePanelLayout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addComponent(PictureHolder, javax.swing.GroupLayout.PREFERRED_SIZE, 673, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        HomePanelLayout.setVerticalGroup(
            HomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HomePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PictureHolder, javax.swing.GroupLayout.PREFERRED_SIZE, 408, Short.MAX_VALUE)
                .addContainerGap())
        );

        MiddlePanel.add(HomePanel, "card2");

        ProfilePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Profile", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Miriam Fixed", 0, 12))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Miriam Fixed", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 0, 0));
        jLabel1.setText("Name");

        jLabel2.setFont(new java.awt.Font("Miriam Fixed", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 0, 0));
        jLabel2.setText("Blood group");

        jLabel3.setFont(new java.awt.Font("Miriam Fixed", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 0, 0));
        jLabel3.setText("Address");

        jLabel4.setFont(new java.awt.Font("Miriam Fixed", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 0, 0));
        jLabel4.setText("City");

        jLabel5.setFont(new java.awt.Font("Miriam Fixed", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 0, 0));
        jLabel5.setText("District");

        jLabel6.setFont(new java.awt.Font("Miriam Fixed", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 0, 0));
        jLabel6.setText("Phone");

        jLabel7.setFont(new java.awt.Font("Miriam Fixed", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 0, 0));
        jLabel7.setText("Reg. date");

        jLabel8.setFont(new java.awt.Font("Miriam Fixed", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(102, 0, 0));
        jLabel8.setText("Age");

        NameTextfield.setEditable(false);
        NameTextfield.setForeground(new java.awt.Color(0, 51, 51));

        BloodgroupTextfield.setEditable(false);
        BloodgroupTextfield.setForeground(new java.awt.Color(0, 51, 51));

        DistrictTextfield.setEditable(false);
        DistrictTextfield.setForeground(new java.awt.Color(0, 51, 51));

        PhoneTextField.setEditable(false);
        PhoneTextField.setForeground(new java.awt.Color(0, 51, 51));

        DateTextField.setEditable(false);
        DateTextField.setForeground(new java.awt.Color(0, 51, 51));

        AgeTextfield.setEditable(false);
        AgeTextfield.setForeground(new java.awt.Color(0, 51, 51));

        AddressTextarea.setEditable(false);
        AddressTextarea.setColumns(20);
        AddressTextarea.setForeground(new java.awt.Color(0, 51, 51));
        AddressTextarea.setRows(5);
        jScrollPane1.setViewportView(AddressTextarea);

        CityTextfield.setEditable(false);
        CityTextfield.setForeground(new java.awt.Color(0, 51, 51));

        javax.swing.GroupLayout ProfilePanelLayout = new javax.swing.GroupLayout(ProfilePanel);
        ProfilePanel.setLayout(ProfilePanelLayout);
        ProfilePanelLayout.setHorizontalGroup(
            ProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProfilePanelLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(ProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(86, 86, 86)
                .addGroup(ProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ProfilePanelLayout.createSequentialGroup()
                        .addGroup(ProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(PhoneTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(DistrictTextfield)
                            .addComponent(CityTextfield))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(ProfilePanelLayout.createSequentialGroup()
                        .addGroup(ProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(NameTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(ProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(BloodgroupTextfield)))
                        .addGap(28, 28, 28)
                        .addGroup(ProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ProfilePanelLayout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(AgeTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(DateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(31, Short.MAX_VALUE))))
        );
        ProfilePanelLayout.setVerticalGroup(
            ProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProfilePanelLayout.createSequentialGroup()
                .addGroup(ProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(NameTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(ProfilePanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(ProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(AgeTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BloodgroupTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(ProfilePanelLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(ProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(ProfilePanelLayout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(DateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(ProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DistrictTextfield, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CityTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(ProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(PhoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(117, 117, 117))
        );

        MiddlePanel.add(ProfilePanel, "card3");

        RequestsSubpanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        RequestsTable.setFont(new java.awt.Font("Miriam Fixed", 0, 12)); // NOI18N
        RequestsTable.setForeground(new java.awt.Color(102, 0, 0));
        RequestsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        RequestsScrollpane.setViewportView(RequestsTable);

        javax.swing.GroupLayout RequestsSubpanelLayout = new javax.swing.GroupLayout(RequestsSubpanel);
        RequestsSubpanel.setLayout(RequestsSubpanelLayout);
        RequestsSubpanelLayout.setHorizontalGroup(
            RequestsSubpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 696, Short.MAX_VALUE)
            .addGroup(RequestsSubpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(RequestsScrollpane, javax.swing.GroupLayout.DEFAULT_SIZE, 696, Short.MAX_VALUE))
        );
        RequestsSubpanelLayout.setVerticalGroup(
            RequestsSubpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 380, Short.MAX_VALUE)
            .addGroup(RequestsSubpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(RequestsScrollpane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE))
        );

        WillingButton.setBackground(new java.awt.Color(0, 102, 51));
        WillingButton.setFont(new java.awt.Font("Miriam Fixed", 0, 12)); // NOI18N
        WillingButton.setForeground(new java.awt.Color(255, 255, 255));
        WillingButton.setText("Willing");
        WillingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WillingButtonActionPerformed(evt);
            }
        });

        NotWillingButton.setBackground(new java.awt.Color(153, 51, 0));
        NotWillingButton.setFont(new java.awt.Font("Miriam Fixed", 0, 12)); // NOI18N
        NotWillingButton.setForeground(new java.awt.Color(255, 255, 255));
        NotWillingButton.setText("Not willing");
        NotWillingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NotWillingButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout RequestsPanelLayout = new javax.swing.GroupLayout(RequestsPanel);
        RequestsPanel.setLayout(RequestsPanelLayout);
        RequestsPanelLayout.setHorizontalGroup(
            RequestsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RequestsPanelLayout.createSequentialGroup()
                .addContainerGap(380, Short.MAX_VALUE)
                .addComponent(WillingButton, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(NotWillingButton, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
            .addGroup(RequestsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(RequestsSubpanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        RequestsPanelLayout.setVerticalGroup(
            RequestsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RequestsPanelLayout.createSequentialGroup()
                .addGap(0, 399, Short.MAX_VALUE)
                .addGroup(RequestsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(WillingButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NotWillingButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(RequestsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(RequestsPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(RequestsSubpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(35, Short.MAX_VALUE)))
        );

        MiddlePanel.add(RequestsPanel, "card4");

        BasePanel.add(MiddlePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 94, 700, 430));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BasePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BasePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void HomeOptionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HomeOptionButtonActionPerformed
        // Sets the visibilty for home panel
       SetVisibility(HomePanel);
    }//GEN-LAST:event_HomeOptionButtonActionPerformed

    private void ProfileOptionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProfileOptionButtonActionPerformed
        // Sets the visibilty for home panel
       SetVisibility(ProfilePanel);
       this.SetDonorProfileDetails();
    }//GEN-LAST:event_ProfileOptionButtonActionPerformed

    private void RequestsOptionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RequestsOptionButtonActionPerformed
        // Sets the visibilty for home panel
       SetVisibility(RequestsPanel);
       
       // populating table
       this.PopulatePendingRequestsTable();
    }//GEN-LAST:event_RequestsOptionButtonActionPerformed

    private void LogoutOptionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutOptionButtonActionPerformed
        // Logging out
        new LoginForm().setVisible(true);
        this.hide();
    }//GEN-LAST:event_LogoutOptionButtonActionPerformed

    private void WillingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WillingButtonActionPerformed
        // On clicking the Willing button
        DataBaseManager dbmanager = null;
        DefaultTableModel dm = (DefaultTableModel)RequestsTable.getModel();
        int rowCount = dm.getRowCount();
        int status = 0;
        String donorID = null;
        if( 0 == rowCount)
        {
            JOptionPane.showMessageDialog(rootPane, "No pending requests..."); 
        }
        else if( RequestsTable.getSelectedRow() >= 0)
        {
            try
            {
                dbmanager = new DataBaseManager();
                donorID = dbmanager.RetrieveDonorID(username);
                status = dbmanager.DonorWillingOrNot(donorID, String.valueOf(RequestsTable.getValueAt( RequestsTable.getSelectedRow() ,0)),
                        "WILLING");
                if (1 == status)
                {
                    this.PopulatePendingRequestsTable();
                    JOptionPane.showMessageDialog(rootPane, "Your feedback has been sent successfully...");                    
                }
                else
                {
                    this.PopulatePendingRequestsTable();
                    JOptionPane.showMessageDialog(rootPane, "Feedback could not be sent...");                    
                }
            }
            catch (ClassNotFoundException | SQLException ex)
            {
                JOptionPane.showMessageDialog(rootPane, ex.getMessage());
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Please select a row to continue...");
        }
    }//GEN-LAST:event_WillingButtonActionPerformed

    private void NotWillingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NotWillingButtonActionPerformed
        // On clicking the Not Willing button
        DataBaseManager dbmanager = null;
        DefaultTableModel dm = (DefaultTableModel)RequestsTable.getModel();
        int rowCount = dm.getRowCount();
        int status = 0;
        String donorID = null;
        if( 0 == rowCount)
        {
            JOptionPane.showMessageDialog(rootPane, "No pending requests..."); 
        }
        else if( RequestsTable.getSelectedRow() >= 0)
        {
            try
            {
                dbmanager =new DataBaseManager();
                donorID = dbmanager.RetrieveDonorID(username);
                status = dbmanager.DonorWillingOrNot(donorID, String.valueOf(RequestsTable.getValueAt( RequestsTable.getSelectedRow() ,0)),
                        "NOTWILLING");
                if (1 == status)
                {
                    this.PopulatePendingRequestsTable();
                    JOptionPane.showMessageDialog(rootPane, "Your feedback has been sent successfully...");                    
                }
                else
                {
                    this.PopulatePendingRequestsTable();
                    JOptionPane.showMessageDialog(rootPane, "Feedback could not be sent...");                    
                }
            }
            catch (ClassNotFoundException | SQLException ex)
            {
                JOptionPane.showMessageDialog(rootPane, ex.getMessage());
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Please select a row to continue...");
        }
    }//GEN-LAST:event_NotWillingButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DonorForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DonorForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DonorForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DonorForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DonorForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea AddressTextarea;
    private javax.swing.JTextField AgeTextfield;
    private javax.swing.JPanel BasePanel;
    private javax.swing.JTextField BloodgroupTextfield;
    private javax.swing.JTextField CityTextfield;
    private javax.swing.JTextField DateTextField;
    private javax.swing.JTextField DistrictTextfield;
    private javax.swing.JPanel HeaderOptionsHolder;
    private javax.swing.JPanel HeaderPanel;
    private javax.swing.JButton HomeOptionButton;
    private javax.swing.JPanel HomePanel;
    private javax.swing.JButton LogoutOptionButton;
    private javax.swing.JPanel MiddlePanel;
    private javax.swing.JTextField NameTextfield;
    private javax.swing.JButton NotWillingButton;
    private javax.swing.JTextField PhoneTextField;
    private javax.swing.JLabel PictureHolder;
    private javax.swing.JButton ProfileOptionButton;
    private javax.swing.JPanel ProfilePanel;
    private javax.swing.JButton RequestsOptionButton;
    private javax.swing.JPanel RequestsPanel;
    private javax.swing.JScrollPane RequestsScrollpane;
    private javax.swing.JPanel RequestsSubpanel;
    private javax.swing.JTable RequestsTable;
    private javax.swing.JButton WillingButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
